CC=@CC@

PY_LDFLAGS+=@PYTHON_LDFLAGS@
PY_CFLAGS+=@PYTHON_CFLAGS@

SQL_CFLAGS=@SQLITE_CFLAGS@
SQL_LDFLAGS=@SQLITE_LIBS@

SSL_CFLAGS=@SSL_CFLAGS@
SSL_LDFLAGS=@SSL_LIBS@

CONFIG_CFLAGS=@LIBCONFIG_CFLAGS@
CONFIG_LDFLAGS=@LIBCONFIG_LIBS@

EVENT_CFLAGS=@EVENT_CFLAGS@
EVENT_LDFLAGS=@EVENT_LIBS@

BSD_CFLAGS=@BSD_CFLAGS@
BSD_LDFLAGS=@BSD_LIBS@

TAG_CFLAGS=@TAGLIB_CFLAGS@
TAG_LDFLAGS=@TAGLIB_LIBS@

CURSES_LDFLAGS=-lcurses -lmenu

CFLAGS=@CFLAGS@
LDFLAGS=@LIBS@
CPPFLAGS=@CPPFLAGS@

INSTALL?=install
PACKAGE_TARNAME=@PACKAGE_TARNAME@

# GNU standard paths
prefix?=@prefix@
exec_prefix=@exec_prefix@
mandir?=@mandir@
sbindir?=@sbindir@
bindir?=@bindir@
datarootdir?=@datarootdir@
docdir?=@docdir@

# convenience paths for us
pydocdir=${docdir}/pydoc
sampledir?=${datarootdir}/examples/hgd
pysupportdir=${datarootdir}/hgd/pylib/hgd

.PHONY: all
all: @ALL_TARGETS@

.PHONY: clean
clean:
	rm -f hgd-playd hgd-netd hgdc hgd-mk-pydoc nchgdc \
		common.o db.o py.o crypto.o net.o cfg.o user.o mplayer.o client.o

user.o: db.h user.h user.c mplayer.o
	@echo "\n--> Building: \"user.o\""
	${CC} user.c ${SQL_CFLAGS} ${CPPFLAGS} ${CFLAGS} ${CONFIG_CFLAGS} \
		-c -o user.o

cfg.o: cfg.h cfg.c
	@echo "\n--> Building: \"cfg.o\""
	${CC} cfg.c ${CPPFLAGS} ${CFLAGS} ${CONFIG_CFLAGS} -c -o cfg.o

crypto.o: crypto.h crypto.c hgd.h config.h
	@echo "\n--> Building: \"crypto.o\""
	${CC} crypto.c ${SSL_CFLAGS} ${CPPFLAGS} ${CFLAGS} -c -o crypto.o

net.o: net.h net.c hgd.h config.h
	@echo "\n--> Building: \"user.o\""
	${CC} net.c ${SSL_CFLAGS} ${CPPFLAGS} ${CFLAGS} -c -o net.o

py.o: py.c py.h config.h
	@echo "\n--> Building: \"py.o\""
	${CC} py.c ${SQL_CFLAGS} ${PY_CFLAGS} ${CPPFLAGS} ${CFLAGS} -c -o py.o 

common.o: common.c hgd.h config.h
	@echo "\n--> Building: \"common.o\""
	${CC} common.c ${BSD_CFLAGS} ${CPPFLAGS} ${CFLAGS} ${SSL_CFLAGS} \
		-c -o common.o

db.o: db.c hgd.h config.h db.h
	@echo "\n--> Building: \"db.o\""
	${CC} db.c ${CPPFLAGS} ${SQL_CFLAGS} ${CFLAGS} -c -o db.o

mplayer.o: mplayer.c mplayer.h
	@echo "\n--> Building: \"mplayer.o\""
	${CC} mplayer.c ${SQL_CFLAGS} ${PY_CFLAGS} ${CPPFLAGS} ${CFLAGS} \
		-c -o mplayer.o

client.o: client.c client.h hgd.h
	@echo "\n--> Building: \"client.o\""
	${CC} client.c ${CONFIG_CFLAGS} ${BSD_CFLAGS} ${SSL_CFLAGS} -c -o client.o

hgd-playd: common.o db.o py.o hgd-playd.c hgd.h config.h crypto.o mplayer.o cfg.o
	@echo "\n--> Building: \"hgd-playd\""
	${CC} hgd-playd.c ${CPPFLAGS} ${SQL_CFLAGS} ${PY_CFLAGS} ${CFLAGS} \
		db.o common.o crypto.o py.o mplayer.o cfg.o \
		${SQL_LDFLAGS} ${SSL_LDFLAGS} ${LDFLAGS} ${PY_LDFLAGS} \
		${BSD_LDFLAGS} ${CONFIG_LDFLAGS} \
		-o hgd-playd 

hgd-netd: cfg.o common.o net.o mplayer.o hgd-netd-event.c hgd.h db.o cfg.o crypto.o user.o
	@echo "\n--> Building: \"hgd-netd\""
	${CC} hgd-netd-event.c ${TAG_CFLAGS} ${CPPFLAGS} ${SQL_CFLAGS} ${CFLAGS} ${PY_CFLAGS} \
		${EVENT_CFLAGS} \
		mplayer.o cfg.o common.o db.o net.o crypto.o user.o \
		${TAG_LDFLAGS} ${SQL_LDFLAGS} ${SSL_LDFLAGS} ${LDFLAGS} \
		${BSD_LDFLAGS} ${CONFIG_LDFLAGS} ${EVENT_LDFLAGS} \
		-o hgd-netd

hgdc: crypto.o client.o common.o net.o cfg.o hgdc.c hgd.h config.h
	@echo "\n--> Building: \"hgdc\""
	${CC} hgdc.c ${CPPFLAGS} ${BSD_CFLAGS} ${CONFIG_CFLAGS} ${CFLAGS} \
		client.o common.o net.o cfg.o crypto.o \
		${LDFLAGS} ${SSL_LDFLAGS} ${BSD_LDFLAGS} ${CONFIG_LDFLAGS} \
		-o hgdc 

hgd-admin: common.o db.o hgd.h hgd-admin.c config.h net.o crypto.o \
	mplayer.o cfg.o user.o
	@echo "\n--> Building: \"hgd-admin\""
	${CC} hgd-admin.c ${CPPFLAGS} ${CFLAGS} ${CONFIG_CFLAGS} ${SQL_CFLAGS} \
		common.o net.o user.o crypto.o db.o mplayer.o cfg.o \
		${SQL_LDFLAGS} ${SSL_LDFLAGS} ${LDFLAGS} ${BSD_LDFLAGS} \
		${CONFIG_LDFLAGS} \
		-o hgd-admin

# XXX configure check for curses and ability to disable the build of this.
# XXX link to the build when in some useful state
nchgdc: client.o common.o cfg.o config.h nchgdc.h nchgdc.c net.o
	@echo "\n--> Building: \"nchgdc\""
	${CC} nchgdc.c ${CPPFLAGS} ${CONFIG_CFLAGS} ${CFLAGS} ${BSD_CFLAGS} \
		common.o cfg.o client.o net.o \
		 ${CONFIG_LDFLAGS} ${CURSES_LDFLAGS} ${BSD_LDFLAGS} \
		 ${SSL_LDFLAGS} \
		-o nchgdc

hgd-mk-pydoc: hgd-mk-pydoc.c config.h hgd.h py.o common.o db.o crypto.o
	@echo "\n--> Building: \"hgd-mk-pydoc\""
	${CC} hgd-mk-pydoc.c ${CPPFLAGS} ${CFLAGS} ${PY_CFLAGS} ${SSL_CFLAGS} \
		${SQL_CFLAGS} \
		db.o common.o py.o crypto.o \
		${PY_LDFLAGS} ${LDFLAGS} ${SSL_LDFLAGS} ${SQL_LDFLAGS} \
		${BSD_CFLAGS} ${BSD_LDFLAGS} \
		-o hgd-mk-pydoc

# Generates python documentation
.PHONY: pydoc
pydoc: hgd-mk-pydoc
	./hgd-mk-pydoc

# OpenBSD hosts only - checks manuals are well formed
.PHONY: lint-mans
lint-mans:
	for i in `ls man`; do mandoc -Tlint man/$$i; done

# The main install target, generated by configure script
.PHONY: install
install: @INSTALL_TARGETS@

# top level, per tool install targets
.PHONY: install-hgdc
install-hgdc: install-man-hgdc install-bin-hgdc

.PHONY: install-hgd-netd
install-hgd-netd: install-man-hgd-netd install-bin-hgd-netd

.PHONY: install-hgd-playd
install-hgd-playd: install-man-hgd-playd install-bin-hgd-playd

.PHONY: install-hgd-admin
install-hgd-admin: install-man-hgd-admin install-bin-hgd-admin

# Install binaries
.PHONY: install-bin-hgdc
install-bin-hgdc: hgdc
	${INSTALL} -d ${DESTDIR}${bindir}
	${INSTALL} hgdc ${DESTDIR}${bindir}

.PHONY: install-bin-hgd-netd
install-bin-hgd-netd: hgd-netd
	${INSTALL} -d ${DESTDIR}${sbindir}
	${INSTALL} hgd-netd ${DESTDIR}${sbindir}

.PHONY: install-bin-hgd-playd
install-bin-hgd-playd: hgd-playd
	${INSTALL} -d ${DESTDIR}${sbindir}
	${INSTALL} hgd-playd ${DESTDIR}${sbindir}

.PHONY: install-bin-hgd-admin
install-bin-hgd-admin: hgd-admin
	${INSTALL} -d ${DESTDIR}${sbindir}
	${INSTALL} hgd-admin ${DESTDIR}${sbindir}

# install README
.PHONY: install-readme
install-readme:
	${INSTALL} -d ${DESTDIR}${docdir}
	${INSTALL} README ${DESTDIR}${docdir}

# install example config files
.PHONY: install-example-server
install-example-server:
	${INSTALL} -d ${DESTDIR}${sampledir}
	${INSTALL} share/examples/hgd.rc ${DESTDIR}${sampledir}

.PHONY: install-example-client
install-example-client:
	${INSTALL} -d ${DESTDIR}${sampledir}
	${INSTALL} share/examples/hgdc.rc ${DESTDIR}${sampledir}

# Installs manuals
.PHONY: install-doc-hgd-netd
install-man-hgd-netd:
	${INSTALL} -d ${DESTDIR}${mandir}/man1
	${INSTALL} man/hgd-netd.1 ${DESTDIR}${mandir}/man1/

.PHONY: install-man-hgd-playd
install-man-hgd-playd:
	${INSTALL} -d ${DESTDIR}${mandir}/man1
	${INSTALL} man/hgd-playd.1 ${DESTDIR}${mandir}/man1/

.PHONY: install-man-hgd-admin
install-man-hgd-admin:
	${INSTALL} -d ${DESTDIR}${mandir}/man1
	${INSTALL} man/hgd-admin.1 ${DESTDIR}${mandir}/man1/

.PHONY: install-man-hgdc
install-man-hgdc:
	${INSTALL} -d ${DESTDIR}${mandir}/man1
	${INSTALL} man/hgdc.1 ${DESTDIR}${mandir}/man1/

.PHONY: install-man-hgd-proto
install-man-hgd-proto:
	${INSTALL} -d ${DESTDIR}${mandir}/man7
	${INSTALL} man/hgd-proto.7 ${DESTDIR}${mandir}/man7/

.PHONY: install-man-hgd-scripting
install-man-hgd-scripting:
	${INSTALL} -d ${DESTDIR}${mandir}/man7
	${INSTALL} man/hgd-scripting.7 ${DESTDIR}${mandir}/man7/

.PHONY: install-py-lib
install-py-lib: hgd-playd
	${INSTALL} -d ${DESTDIR}${pysupportdir}
	${INSTALL} pylib/hgd/__init__.py ${DESTDIR}${pysupportdir}
	${INSTALL} pylib/hgd/playlist.py ${DESTDIR}${pysupportdir}
	${INSTALL} pylib/hgd/doccer.py ${DESTDIR}${pysupportdir}

# Install pydoc
.PHONY: install-pydoc
install-pydoc:
	${INSTALL} -d ${DESTDIR}${pydocdir}
	${INSTALL} -d ${DESTDIR}${pydocdir}/txt
	#${INSTALL} -d ${DESTDIR}${pydocdir}/html
	${INSTALL} pydoc/txt/index.txt ${DESTDIR}${pydocdir}/txt/
	${INSTALL} pydoc/txt/hgd.playlist.txt ${DESTDIR}${pydocdir}/txt/
	${INSTALL} pydoc/txt/hgd.doccer.txt ${DESTDIR}${pydocdir}/txt/
	#${INSTALL} pydoc/html/index.html ${DESTDIR}${pydocdir}/html/
	#${INSTALL} pydoc/html/hgd.playlist.html ${DESTDIR}${pydocdir}/html/
	#${INSTALL} pydoc/html/hgd.doccer.html ${DESTDIR}${pydocdir}/html/


